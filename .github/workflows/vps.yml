name: VPS + Puppeteer + SSH Server
on:
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      
      - name: System Optimization
        run: |
          sudo sysctl -w vm.swappiness=10
          sudo sysctl -w vm.vfs_cache_pressure=50
          sudo sysctl -w net.core.rmem_max=134217728
          sudo sysctl -w net.core.wmem_max=134217728
          sudo sysctl -w net.ipv4.tcp_rmem="4096 65536 134217728"
          sudo sysctl -w net.ipv4.tcp_wmem="4096 65536 134217728"
          sudo sysctl -w net.core.netdev_max_backlog=5000
          ulimit -n 65536
          sudo apt-get clean
          sudo apt-get autoremove -y
          
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            wget unzip curl git ca-certificates gnupg lsb-release \
            fonts-liberation libx11-xcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxi6 libxtst6 libnss3 libxrandr2 libatk1.0-0 \
            libatk-bridge2.0-0 libcups2 libdbus-1-3 libdrm2 libxss1 \
            libgbm1 xdg-utils libasound2t64 libxshmfence1 openssh-server
            
      - name: Install Chrome
        run: |
          wget -q -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome.deb || sudo apt-get install -f -y
          google-chrome --version
          
      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm config set registry https://registry.npmjs.org/
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 2
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 60000
          node --version
          npm --version
          
      - name: Install Puppeteer Dependencies
        run: |
          npm install --silent puppeteer-real-browser hpack
          git clone --depth 1 https://github.com/depchaiaiyeu/dos-bot
          cd dos-bot
          if [ -f "package.json" ]; then
            npm install --silent --production
          fi
          
      - name: Setup SSH Server
        run: |
          sudo useradd -m -s /bin/bash vpsuser
          echo 'vpsuser:vps2024@' | sudo chpasswd
          echo "vpsuser ALL=(ALL) NOPASSWD:ALL" | sudo tee -a /etc/sudoers
          sudo mkdir -p /home/vpsuser/.ssh
          sudo chown vpsuser:vpsuser /home/vpsuser/.ssh
          sudo chmod 700 /home/vpsuser/.ssh
          
          sudo tee /etc/ssh/sshd_config > /dev/null << 'EOF'
Port 2222
PermitRootLogin no
PasswordAuthentication yes
PubkeyAuthentication yes
AllowUsers vpsuser
ClientAliveInterval 120
ClientAliveCountMax 3
MaxAuthTries 3
EOF
          
          sudo service ssh start
          sudo systemctl enable ssh
          
 "Project: dos-bot ready in home directory"
          echo "========================================"
          
      - name: Keep alive
        run: |
          start_time=$(date +%s)
          target_duration=3300
          
          echo "VPS will run for 55 minutes"
          echo "Started at: $(date)"
          
          while true; do
            current_time=$(date +%s)
            elapsed=$((current_time - start_time))
            remaining=$((target_duration - elapsed))
            
            if [ $remaining -le 0 ]; then
              echo "55 minutes completed!"
              break
            fi
            
            if [ $((elapsed % 300)) -eq 0 ]; then
              echo "Running time: $((elapsed/60)) minutes, Remaining: $((remaining/60)) minutes"
              
              if ! pgrep -f "ngrok" > /dev/null; then
                echo "ngrok process died, restarting..."
                nohup ./ngrok tcp 2222 > ngrok.log 2>&1 &
              fi
              
              if ! pgrep -f "sshd" > /dev/null; then
                echo "SSH server died, restarting..."
                sudo service ssh start
              fi
            fi
            
            sleep 30
          done
