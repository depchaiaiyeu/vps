name: VPS + Puppeteer vá»›i SSH Tunnel
on:
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      
      - name: System Optimization
        run: |
          sudo sysctl -w vm.swappiness=10
          sudo sysctl -w vm.vfs_cache_pressure=50
          sudo sysctl -w net.core.rmem_max=134217728
          sudo sysctl -w net.core.wmem_max=134217728
          sudo sysctl -w net.ipv4.tcp_rmem="4096 65536 134217728"
          sudo sysctl -w net.ipv4.tcp_wmem="4096 65536 134217728"
          sudo sysctl -w net.core.netdev_max_backlog=5000
          ulimit -n 65536
          sudo apt-get clean
          sudo apt-get autoremove -y
          
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            wget unzip curl git ca-certificates gnupg lsb-release \
            fonts-liberation libx11-xcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxi6 libxtst6 libnss3 libxrandr2 libatk1.0-0 \
            libatk-bridge2.0-0 libcups2 libdbus-1-3 libdrm2 libxss1 \
            libgbm1 xdg-utils libasound2t64 libxshmfence1
            
      - name: Setup SSH Tunnel
        run: |
          echo "runner:VPS12345" | sudo chpasswd
          sudo systemctl start ssh
          sudo systemctl enable ssh
          sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo systemctl restart ssh
          
          ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa -N ""
          
          nohup ssh -o StrictHostKeyChecking=no -R 0:localhost:22 serveo.net > serveo.log 2>&1 &
          sleep 10
          
          for i in {1..15}; do
            if grep -q "Forwarding SSH" serveo.log; then
              SSH_INFO=$(grep "Forwarding SSH" serveo.log | tail -1)
              break
            fi
            echo "Waiting for serveo tunnel... ($i/15)"
            sleep 2
          done
          
          if [ -z "$SSH_INFO" ]; then
            echo "Trying alternative tunnel..."
            pkill -f "ssh.*serveo"
            nohup ssh -o StrictHostKeyChecking=no -R 2222:localhost:22 nokey@localhost.run > tunnel.log 2>&1 &
            sleep 10
            
            for i in {1..10}; do
              if grep -q "tunneled" tunnel.log; then
                TUNNEL_INFO=$(grep "tunneled" tunnel.log | tail -1)
                break
              fi
              sleep 2
            done
            
            if [ ! -z "$TUNNEL_INFO" ]; then
              TUNNEL_HOST=$(echo "$TUNNEL_INFO" | grep -o '[a-zA-Z0-9.-]*localhost.run')
              SSH_PORT="2222"
              echo "========================================"
              echo "ðŸš€ VPS SSH CONNECTION READY"
              echo "========================================"
              echo "Copy this command to connect:"
              echo ""
              echo "ssh runner@$TUNNEL_HOST -p $SSH_PORT"
              echo ""
              echo "Password: VPS12345"
              echo "========================================"
            else
              echo "Manual SSH setup - Use GitHub Codespaces instead"
            fi
          else
            SSH_HOST=$(echo "$SSH_INFO" | grep -o '[a-zA-Z0-9.-]*serveo.net')
            SSH_PORT=$(echo "$SSH_INFO" | grep -o 'port [0-9]*' | cut -d' ' -f2)
            
            echo "========================================"
            echo "ðŸš€ VPS SSH CONNECTION READY"
            echo "========================================"
            echo "Copy this command to connect:"
            echo ""
            echo "ssh runner@$SSH_HOST -p $SSH_PORT"
            echo ""
            echo "Password: VPS12345"
            echo "========================================"
            echo "Host: $SSH_HOST"
            echo "Port: $SSH_PORT"
            echo "Username: runner"
            echo "Password: VPS12345"
            echo "========================================"
          fi
          
      - name: Install Chrome
        run: |
          wget -q -O google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome.deb || sudo apt-get install -f -y
          
      - name: Install Node.js
        run: |
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm config set registry https://registry.npmjs.org/
          npm config set fetch-retries 5
          npm config set fetch-retry-factor 2
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 60000
          
      - name: Install Puppeteer Dependencies
        run: |
          npm install --silent puppeteer-real-browser hpack
          git clone --depth 1 https://github.com/depchaiaiyeu/dos-bot
          cd dos-bot
          if [ -f "package.json" ]; then
            npm install --silent --production
          fi
          
      - name: Keep VPS Alive
        run: |
          echo "VPS is running... Connect using SSH command above"
          echo "Session will auto-close after 30 minutes"
          sleep 1800
